additionalArguments:
- --api.dashboard=true
- --api.insecure=false
- --entrypoints.web.address=:8080
- --entrypoints.websecure.address=:8443
- --entrypoints.web.http.redirections.entrypoint.to=websecure
- --entrypoints.web.http.redirections.entrypoint.scheme=https
- --entrypoints.web.http.redirections.entrypoint.permanent=true
additionalVolumeMounts: []
affinity: {}
certificatesResolvers: {}
commonLabels: {}
core:
  defaultRuleSyntax: ""
deployment:
  additionalContainers: []
  additionalVolumes: []
  annotations: {}
  enabled: true
  imagePullSecrets: []
  initContainers: []
  kind: Deployment
  labels: {}
  lifecycle: {}
  minReadySeconds: 0
  podAnnotations: {}
  podLabels: {}
  replicas: 3
  runtimeClassName: ""
  shareProcessNamespace: false
  terminationGracePeriodSeconds: 60
env: []
envFrom: []
experimental:
  abortOnPluginFailure: false
  fastProxy:
    debug: false
    enabled: false
  kubernetesGateway:
    enabled: false
  plugins: {}
extraObjects: []
gateway:
  annotations: {}
  enabled: true
  infrastructure: {}
  listeners:
    web:
      hostname: ""
      namespacePolicy: null
      port: 8000
      protocol: HTTP
  name: ""
  namespace: ""
gatewayClass:
  enabled: true
  labels: {}
  name: ""
globalArguments:
- --global.checknewversion
- --global.sendanonymoususage
hostNetwork: false
image:
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: traefik
  tag: null
ingressClass:
  enabled: true
  isDefaultClass: true
  name: ""
ingressRoute:
  dashboard:
    enabled: true
    entryPoints:
    - websecure
    matchRule: Host(`traefik.syjapp.com`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
    middlewares:
    - name: dashboard-auth
      namespace: traefik
    services:
    - kind: TraefikService
      name: api@internal
    tls:
      secretName: syjapp-tls
  healthcheck:
    annotations: {}
    enabled: false
    entryPoints:
    - traefik
    labels: {}
    matchRule: PathPrefix(`/ping`)
    middlewares: []
    services:
    - kind: TraefikService
      name: ping@internal
    tls: {}
instanceLabelOverride: ""
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2
logs:
  access:
    addInternals: false
    enabled: false
    fields:
      general:
        defaultmode: keep
        names: {}
      headers:
        defaultmode: drop
        names: {}
    filters:
      minduration: ""
      retryattempts: false
      statuscodes: ""
  general:
    filePath: ""
    level: INFO
    noColor: false
metrics:
  addInternals: false
  otlp:
    enabled: false
    grpc:
      enabled: false
    http:
      enabled: false
  prometheus:
    entryPoint: metrics
    manualRouting: false
    prometheusRule:
      enabled: false
    service:
      annotations: {}
      enabled: false
      labels: {}
    serviceMonitor:
      enabled: false
namespaceOverride: ""
nodeSelector: {}
persistence:
  accessMode: ReadWriteMany
  annotations: {}
  enabled: true
  name: data
  path: /data
  size: 128Mi
podDisruptionBudget:
  enabled: false
podSecurityContext:
  fsGroup: 65532
  fsGroupChangePolicy: OnRootMismatch
podSecurityPolicy:
  enabled: false
ports:
  traefik:
    expose:
      default: false
    exposedPort: 9000
    port: 9000
    protocol: TCP
  web:
    expose:
      default: true
    exposedPort: 80
    port: 8080
    protocol: TCP
  websecure:
    expose:
      default: true
    exposedPort: 443
    port: 8443
    protocol: TCP
    tls:
      certResolver: ""
      domains: []
      enabled: true
      options: ""
priorityClassName: ""
providers:
  file:
    content: ""
    enabled: false
    watch: true
  kubernetesCRD:
    allowCrossNamespace: false
    allowEmptyServices: true
    allowExternalNameServices: false
    enabled: true
    ingressClass: ""
    namespaces: []
    nativeLBByDefault: false
  kubernetesGateway:
    enabled: false
    experimentalChannel: false
    labelselector: ""
    namespaces: []
    nativeLBByDefault: false
    statusAddress:
      hostname: ""
      ip: ""
      service:
        enabled: true
        name: ""
        namespace: ""
  kubernetesIngress:
    allowEmptyServices: true
    allowExternalNameServices: false
    enabled: true
    ingressClass: null
    namespaces: []
    nativeLBByDefault: false
    publishedService:
      enabled: true
      pathOverride: ""
rbac:
  aggregateTo: []
  enabled: true
  namespaced: false
  secretResourceNames: []
readinessProbe:
  failureThreshold: 1
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2
resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
serviceAccount:
  name: ""
serviceAccountAnnotations: {}
startupProbe: {}
tlsStore:
  default:
    defaultCertificate:
      secretName: syjapp-tls
tolerations: []
topologySpreadConstraints: []
tracing:
  addInternals: false
  otlp:
    enabled: false
    grpc:
      enabled: false
    http:
      enabled: false
updateStrategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  type: RollingUpdate
versionOverride: ""
volumes: []
